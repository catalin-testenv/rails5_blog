
<%= form_global_errors(resource, Page) %>

<%= form_for([:admin, resource], html: {class: 'edit_page uk-form uk-form-stacked custom-cc custom-cc-fa'}) do |f| %>

    <div class="uk-grid uk-grid-small" data-uk-grid-margin>

      <div class="uk-width">
        <div class="uk-grid uk-grid-small" data-uk-grid-margin>
          <div class="uk-width-medium-1-1">
            <%= form_input(f, :text_field, :name, icon_title) %>
          </div>
          <div class="uk-width-medium-1-2">
            <% parent_id_options = page_categories_all.collect { |p| [p.name, p.id] }.unshift([I18n.t('root'), 0]) %>
            <%= form_select(f, :parent_id, icon_page_category, parent_id_options, resource.parent_id) %>
          </div>
          <div class="uk-width-medium-1-2">
            <%= form_input(f, :text_field, :ordering, icon_ordering) %>
          </div>
        </div>
      </div>

      <div class="uk-width uk-margin-top-remove">
        <div class="uk-grid uk-grid-small">
          <div class="uk-width-medium-1-2 uk-margin-top">
            <%= form_check_box(f, :is_main_nav, icon_is_main_nav) %>
          </div>
          <div class="uk-width-medium-1-2 uk-margin-top">
            <%= form_check_box(f, :is_commentable, icon_is_commentable) %>
          </div>
          <div class="uk-width-medium-1-2 uk-margin-top">
            <%= form_check_box(f, :published, icon_published) %>
          </div>
          <div class="uk-width-medium-1-2 uk-margin-top">
            <%= form_check_box(f, :root_page, icon_home_page) %>
          </div>
        </div>
      </div>

      <div class="uk-width">
        <span class="uk-form-label"><%= Tag.model_name.human(count: 2) %></span>
        <div id="page-tags" data-all-tags='<%= Tag.all.map.with_object({}){ |tag, h| h[tag.id] = tag.name}.to_json %>' data-page-tags='<%= f.object.tags.pluck(:id).to_json %>'>
        </div>
      </div>

      <%= f.fields_for :page_content do |f| %>
        <div class="uk-width uk-margin-top">
          <ul class="uk-tab" data-uk-tab="{connect:'#code-editor-area'}">
            <li class="uk-active"><a><%= f.object.class.human_attribute_name(:content) %></a></li>
            <li><a href=""><%= f.object.class.human_attribute_name(:meta_description) %></a></li>
            <li><a href=""><%= f.object.class.human_attribute_name(:excerpt) %></a></li>
            <li><a href="" ><%= f.object.class.human_attribute_name(:meta_css) %></a></li>
            <li><a href=""><%= f.object.class.human_attribute_name(:meta_js) %></a></li>
          </ul>
          <ul id="code-editor-area" class="uk-switcher code-editor-area">
            <li><%= f.text_area :content, data: {
                'editor-ace': '{"sessionOptions": {"language":"html_ruby"}}',
                'editor-tinymce': '{}'
            } %></li>
            <li><%= f.text_area :meta_description, data: {
                'editor-ace': '{"sessionOptions": {"language":"text"}}'
            } %></li>
            <li><%= f.text_area :excerpt, data: {
                'editor-ace': '{"sessionOptions": {"language":"html_ruby"}}',
                'editor-tinymce': '{"toolbar": "forecolor backcolor", "plugins": "textcolor"}'
            } %></li>
            <li><%= f.text_area :meta_css, data: {
                'editor-ace': '{"sessionOptions": {"language":"css"}}'
            } %></li>
            <li><%= f.text_area :meta_js, data: {
                'editor-ace': '{"sessionOptions": {"language":"javascript"}}'
            } %></li>
          </ul>
          <% [:content, :meta_description, :excerpt].each do |key| %>
              <% f.object.errors[key].each do |e|%>
                  <p class="uk-form-help-block uk-text-danger"> <%= f.object.class.human_attribute_name(key) %> <%= e %></p>
              <% end %>
          <% end %>
        </div>
      <% end %>

      <div class="uk-width uk-margin-top">
        <%= form_button(f, icon_save, false) %>
      </div>
    </div>

<% end %>

<!-- tags picker popup -->
<div id="available-tags" class="uk-modal" >
  <div class="uk-modal-dialog">
    <a class="uk-modal-close uk-close"></a>
    <div class="badges">
    </div>
  </div>
</div>

<script>
  'use strict';

  var $pageTags = $('#page-tags');
  var $badgesContainer =  $('.badges', $('#available-tags'));

  function removeBadge(self, evt) {
    evt.preventDefault();
    var $self = $(self);
    var dataPageTags = $pageTags.data('page-tags');
    var dataId = $self.data('id');
    // subtract id from data-page-tags
    $pageTags.data('page-tags', dataPageTags.filter(function(id){ return id !== dataId; }));
    $self.parent().remove();
  }

  function moveBadge(self, evt) {
    evt.preventDefault();
    var $self = $(self);
    var dataId = $self.data('id');
    var dataName = $self.data('name');
    appendTag($pageTags, dataId, dataName, false);
    // add id to data-page-tags
    $pageTags.data('page-tags', $pageTags.data('page-tags').concat(dataId));
    $self.parent().remove();
  }

  function appendTag(container, id, name, available) {
    container.append(
        '<span class="uk-badge page-tag">' +
          '<input type="hidden" name="page[tags]['+id+']" value="1" />' +
          name +
          (available ?
          '<a href="" data-id="'+id+'" data-name="'+name+'" onclick="moveBadge(this, event)" class="uk-close icon-add"></a>' :
          '<a href="" data-id="'+id+'"                      onclick="removeBadge(this, event)" class="uk-close"></a>') +
        '</span>'
    );
  }

  $pageTags.each(function() {
    var $this = $(this);
    var allTags = $this.data('all-tags');
    var pageTagIds =  $this.data('page-tags');
    var newTagBtn = $('<span class="uk-badge page-tag" style="padding: 0px 0px 0px 0px !important;"><i class="uk-close icon-add"></i></span>');

    for (var i = 0; i < pageTagIds.length; i++) {
      var id = parseInt(pageTagIds[i]);
      var name = allTags[id];
      appendTag($this, id, name, false);
    }

    newTagBtn.click(function(e) {
      e.preventDefault();
      $badgesContainer.children().remove();
      var pageTagIds =  $pageTags.data('page-tags'); // get the latest data Ids
      for (var id in allTags) {
        id = parseInt(id);
        (pageTagIds.indexOf(id) === -1) && appendTag($badgesContainer, id, allTags[id], true);
      }
      UIkit.modal('#available-tags').show();
    });
    $this.prepend(newTagBtn);

  });
</script>
